//Sorted insert for circular linked list
//Given a sorted circular linked list of length n, the task is to insert a new node in this circular list so that it remains a sorted circular linked list.
class Solution {
    public Node sortedInsert(Node head, int data) {
        Node current=head;
        Node new_Node=new Node(data);
        
        //case1 
        if(current==null){
            new_Node.next=new_Node;
            return new_Node;
        }
        
        //case2
        else if(current.data>=new_Node.data){
            //if value is smaller than head's value then , need to change next of last node
            while(current.next!=head)
                current=current.next;
                
                
            current.next=new_Node;
            new_Node.next=head;
            return new_Node;
            

        }
        
        //case3
        else{
            //locate node before point of insertion
            while(current.next!=head &&current.next.data<new_Node.data)
                current=current.next;
                
                
            new_Node.next=current.next;
            current.next=new_Node;
            return head;
        }
    }
}
