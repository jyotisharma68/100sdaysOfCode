//Delete middle element of a stack
//Given a stack, delete the middle element of the stack without using any additional data structure.
//Middle element:- floor((size_of_stack+1)/2) (1-based indexing) from bottom of the stack.

//Note: The output shown by the compiler is the stack from top to bottom.

class Solution
{
    //Function to delete middle element of a stack.
    public void deleteMid_util(Stack<Integer>s,int sizeOfStack,int current){
       //if current pointer is half of size of stack then we are accessing middle element of stack
       if(current==sizeOfStack/2)
       {
           s.pop();
           return;
       }
       
       //storing top element in variable and popping it
       int x=s.peek();
       s.pop();
       current+=1;
       
       
       //calling function recursively
       deleteMid_util(s,sizeOfStack,current);
       
       //pushing elements (except middle element) back into stack after recursion calls
       s.push(x);
    }
    public void deleteMid(Stack<Integer>s,int sizeOfStack){
        deleteMid_util(s,sizeOfStack,0);
    }
}

