//Transform to Sum Tree
/*
Given a Binary Tree of size N , where each node can have positive or negative values. Convert this to a tree where each node contains the sum of the left and right sub trees of the original tree. The values of leaf nodes are changed to 0.

*/

class Solution{
    
    //convert given tree to a tree where every node contains sum of values of nodes in left and right subtrees in original tree
    
    public int toSumTreeUtil(Node node){
         //base case
        if(node==null)
            return 0;
        
        //store old value
        int old_val=node.data;
        
        //recursively call for left and right subtrees and store sum as new value of this node
        node.data=toSumTreeUtil(node.left) + toSumTreeUtil(node.right);
        
        //return sum of values of nodes in left and right subtrees and old_value of this node
        return node.data + old_val;
        
    }
    
    public void toSumTree(Node node){
        toSumTreeUtil(node);
    }
}
