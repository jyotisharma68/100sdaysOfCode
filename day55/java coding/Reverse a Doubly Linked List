//Reverse a Doubly Linked List
//Given a doubly linked list of n elements. Your task is to reverse the doubly linked list in-place.

class Node
{
    int data;
    Node next, prev;
    Node(int data)
    {
        this.data = data;
        this.next = null;
        this.prev = null;
    }
}

*/
public static Node reverseDLL(Node  head)
{
    //check if head is null or head.next is null, if true then return head itself as there isno need to reverse a list with 0 or 1 node
    if(head==null || head.next==null)
        return head;
        
    //declare a current and previous node
    Node curr=head, prev=null;
    
    //loop through list
    while(curr!=null){
        //store previous node in prev
        prev=curr.prev;
        //swap prev and next pointers of current node
        curr.prev=curr.next;
        curr.next=prev;
        
        //move curretn node to its previous node
        curr=curr.prev;
    }
    
    //return previous node of head as new head
    return prev.prev;
}
