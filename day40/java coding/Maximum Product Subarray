//Maximum Product Subarray
//Given an array Arr[] that contains N integers (may be positive, negative or zero).
//Find the product of the maximum product subarray.

class Solution {
    // Function to find maximum product subarray
    long maxProduct(int[] arr, int n) {
        //maxProductl-variable to keep track of maximum product
        //minVal-variable to keep track of min product
        //maxVal-keeps track of max product until current index
        long minVal=arr[0];
        long maxVal=arr[0];
        
        long maxProduct=arr[0];
        
        for(int i=1;i<n;i++){
            
            //when multiplied by -ve number,maxVal becomes minVal,minVal becomes maxVal
            if(arr[i]<0){
                long temp=maxVal;
                maxVal=minVal;
                minVal=temp;
            }
            
            //maxVal & minVal stores the product of subarray at arr[i]
            maxVal=Math.max(arr[i],maxVal*arr[i]);
            minVal=Math.min(arr[i],minVal*arr[i]);
            
            //max product of array
            maxProduct =Math.max(maxProduct,maxVal);
        }
        
        //returning max product found in array
        return maxProduct;
    }
}
