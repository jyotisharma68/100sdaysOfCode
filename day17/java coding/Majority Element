//Majority Element
//Given an array A of N elements. Find the majority element in the array. A majority element in an array A of size N is an element that appears strictly more than N/2 times in the array.

class Solution
{
    //function to find candidate for majority
    static int findCandidate(int a[],int size){
        int maj_index=0,count=1;
        
        //using linear search to compute candidate for majority element
        for(int i=1;i<size;i++){
            if(a[maj_index]==a[i])
                count++;
            else
                count--;
            if(count==0){
                maj_index=i;
                count=1;
            }
        }
        return a[maj_index];
    }
    
    //function to check if candidate occurs more than n/2 times
    static boolean isMajority(int a[],int size,int cand){
        int count=0;
        for(int i=0;i<size;i++)
            if(a[i]==cand)
            count++;
        if(count>size/2)
            return true;
        else
            return false;
    }
    
    
    
    static int majorityElement(int a[], int size)
    {
        //find candidate for majority
        int cand=findCandidate(a,size);
        
        
        //print candidate if it is majority
        if(isMajority(a,size,cand)==true)
            return cand;
        else
            return -1;
    }
}
