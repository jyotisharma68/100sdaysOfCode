//Intersection of two sorted Linked lists
//Given two linked lists sorted in increasing order, create a new linked list representing the intersection of the two linked lists. The new linked list should be made with without changing the original lists.

//Note: The elements of the linked list are not necessarily distinct.

/* Node of a linked list
 class Node {
   int data;
    Node next;
    Node(int d)  { data = d;  next = null; }
}
*/

class Solution
{
   public static Node findIntersection(Node head1, Node head2)
    {
        Node p1=head1,p2=head2;
        Node head=null, tail=null;
        
        while(p1!=null && p2!=null){
            if(p1.data>p2.data){
                //nodes do not match , move to next node in list with smaller node
                p2=p2.next;
            }else if(p2.data>p1.data){
                //nodes do not match ,move to next node in list with smaller node
                p1=p1.next;
            }else{
                //nodes match
                
                if(head==null)
                    head=tail=new Node(p1.data);
                    
                    //create new head for intersection list
                    
                else{
                    //append new node at end
                    tail.next=new Node(p1.data);
                    tail=tail.next;
                }
                p1=p1.next;
                p2=p2.next;
                
                //move to next node in both lists
            }
        }
        return head;
    }
}
