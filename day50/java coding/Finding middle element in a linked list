//Finding middle element in a linked list
//Given a singly linked list of N nodes.
//The task is to find the middle of the linked list. For example, if the linked list is
//1-> 2->3->4->5, then the middle node of the list is 3.
//If there are two middle nodes(in case, when N is even), print the second middle element.
//For example, if the linked list given is 1->2->3->4->5->6, then the middle node of the list is 4.



/* Node of a linked list
 class Node {
   int data;
    Node next;
    Node(int d)  { data = d;  next = null; }
}
*/

class Solution
{
    //function to find middle element a linked list
    int getMiddle(Node head)
    {
        Node slow=head;
        Node fast=head;
        while(fast!=null &&fast.next!=null){
            slow=slow.next;
            //this pointer  oves 1nodes ahead everytime loop is run
            
            fast=fast.next.next;
            //this pointer moves 2nodes ahead everytime loop is run
        }
        return slow.data;
        //since slow was moving with half speed,it is there at halfway point
    }
}
