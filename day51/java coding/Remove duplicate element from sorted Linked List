//Remove duplicate element from sorted Linked List
//Given a singly linked list consisting of N nodes. The task is to remove duplicates (nodes with duplicate values) from the given list (if exists).
//Note: Try not to use extra space. The nodes are arranged in a sorted way.

/*
class Node
    {
        int data;
        Node next;
        Node(int d) {data = d; next = null; }
    }
*/

class GfG
{
    //Function to remove duplicates from sorted linked list.
    Node removeDuplicates(Node head)
    {
            //using pointer to iterate over linked list
            Node current=head;
        
        
        //tranversing through linked list
        while(cuurent.next!=null){
            
            //if data at current node and next node are same, we store node next to next node
            //current node in link of current node.
            if(current.data==current.next.data)
               current.next=cureent.next.next;
            
            
            //we just move pointer to next node   
            else
               current=current.next;
        }
        
        return head;
		
    }
}
